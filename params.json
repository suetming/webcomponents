{"name":"Web组件","tagline":"Web Components","body":"Web组件\r\n=======\r\n译者：suetming\r\n\r\n原文：[Web Components](http://www.w3.org/TR/2013/WD-components-intro-20130606/)\r\n\r\n1 关于本文\r\n-----------\r\n\r\n注意文章涉及正在开展的工作. 关系到web组件的一系列概念，每个概念都有各自的规范.\r\n这是一个迭代的过程\r\n\r\n本文描述的概念有时会落后或者超前于专门界定此概念的规范，一旦本文涉及的前瞻性技术被相应的规范所采纳，本文会更新并注明\r\n\r\n2 介绍\r\n------------\r\nweb组件模型由5部分组成：\r\n\r\n- 1. Templates：由一系列复用时能被激活的标记组成\r\n- 2. Decorators：用于Templates中，通过CSS丰富和控制交互改变文本\r\n- 3. Custom Elements：让用户可以自定义元素[自定义元素名、自定义API接口\r\n- 4. Shadow DOM：将一组DOM树封装成一个用户接口元素\r\n- 5. Imports：定义如何将Templates、Decorators和Custom Elements打包，并且能够以资源的形式从外部引用\r\n\r\n每一部分都有各自的用途. 如果将这5种技术引入，开发人员可以轻松的编写拥有复杂交互体验的组件，并且可以轻松引用和组装，这是今天的CSS和脚本语言所无法达到的\r\n\r\n本文将会讨论这5种技术，并举例说明其在Web组件中的作用\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}